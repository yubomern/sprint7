"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.EmailModule = void 0;
const request_service_1 = require("../services/request.service");
const Activity_module_1 = require("./email/Activity.module");
const Analytics_module_1 = require("./email/Analytics.module");
const Domain_module_1 = require("./email/Domain.module");
const Inbound_module_1 = require("./email/Inbound.module");
const Message_module_1 = require("./email/Message.module");
const Schedule_module_1 = require("./email/Schedule.module");
const Recipient_module_1 = require("./email/Recipient.module");
const Template_module_1 = require("./email/Template.module");
const Webhook_module_1 = require("./email/Webhook.module");
const Identity_module_1 = require("./email/Identity.module");
class EmailModule extends request_service_1.RequestService {
    constructor(apiKey, baseUrl) {
        super(apiKey, baseUrl);
        this.activity = new Activity_module_1.ActivityModule(apiKey, baseUrl);
        this.analytics = new Analytics_module_1.AnalyticsModule(apiKey, baseUrl);
        this.domain = new Domain_module_1.DomainModule(apiKey, baseUrl);
        this.inbound = new Inbound_module_1.InboundModule(apiKey, baseUrl);
        this.message = new Message_module_1.MessageModule(apiKey, baseUrl);
        this.schedule = new Schedule_module_1.ScheduleModule(apiKey, baseUrl);
        this.recipient = new Recipient_module_1.RecipientModule(apiKey, baseUrl);
        this.template = new Template_module_1.TemplateModule(apiKey, baseUrl);
        this.webhook = new Webhook_module_1.EmailWebhookModule(apiKey, baseUrl);
        this.identity = new Identity_module_1.IdentityModule(apiKey, baseUrl);
    }
    send(params) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.post("/email", params);
        });
    }
    sendBulk(params) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.post("/bulk-email", params);
        });
    }
    getBulkStatus(bulkId) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.get(`/bulk-email/${bulkId}`);
        });
    }
}
exports.EmailModule = EmailModule;
